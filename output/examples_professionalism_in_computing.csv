Subject,Topic,Example,Codes
Computer Science,Professionalism in Computing,"The evolution of computing standards and practices, such as software development methodologies like Agile and Waterfall, reflect the dynamic nature of professional engineering. While Agile emphasizes flexibility and continuous improvement, it has been challenged by critics who argue that it may compromise on documentation and thorough testingâ€”a debate rooted in the ongoing research on balancing adaptability with quality assurance. This reflects how knowledge in computing is not static but continuously constructed through rigorous validation and peer review processes.","EPIS,UNC"
Computer Science,Professionalism in Computing,"In the realm of software development, adherence to professional standards ensures that code is both maintainable and secure. For instance, when implementing a login system using the Secure Hash Algorithm (SHA-256) for password hashing, developers must be aware of padding schemes like PKCS#7 to prevent length-extension attacks. This requires understanding the underlying cryptographic principles. Moreover, applying industry best practices such as using environment variables to store sensitive data and employing version control systems can significantly enhance code integrity and traceability. These measures not only protect user data but also facilitate efficient collaboration among team members.","CON,PRO,PRAC"
Computer Science,Professionalism in Computing,"In professional computing, adhering to ethical standards and legal requirements is crucial. For instance, when developing software for financial institutions, engineers must ensure their work complies with the Sarbanes-Oxley Act (SOX) and ISO 27001 security protocols. Real-world case studies highlight the importance of transparent communication and rigorous testing procedures. Practical design processes include using automated code review tools like SonarQube to maintain high-quality coding standards and employing version control systems such as Git for collaborative projects. These practices not only enhance project success but also uphold professional integrity in the software development lifecycle.",PRAC
